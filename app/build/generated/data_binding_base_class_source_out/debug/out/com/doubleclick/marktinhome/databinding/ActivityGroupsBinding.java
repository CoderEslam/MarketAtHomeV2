// Generated by view binder compiler. Do not edit!
package com.doubleclick.marktinhome.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.doubleclick.marktinhome.R;
import com.doubleclick.marktinhome.Views.CircleImageView;
import com.doubleclick.marktinhome.Views.socialtextview.SocialTextView;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.todkars.shimmer.ShimmerRecyclerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView QRCode;

  @NonNull
  public final ImageView back;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ImageView cover;

  @NonNull
  public final LinearLayout createPost;

  @NonNull
  public final LinearLayout details;

  @NonNull
  public final SocialTextView discription;

  @NonNull
  public final TextView history;

  @NonNull
  public final CircleImageView imageGroup;

  @NonNull
  public final LinearLayout locationLayout;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView nothing;

  @NonNull
  public final ImageView option;

  @NonNull
  public final ShimmerRecyclerView post;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final CircleImageView selectImage;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView username;

  private ActivityGroupsBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView QRCode,
      @NonNull ImageView back, @NonNull ConstraintLayout constraintLayout, @NonNull ImageView cover,
      @NonNull LinearLayout createPost, @NonNull LinearLayout details,
      @NonNull SocialTextView discription, @NonNull TextView history,
      @NonNull CircleImageView imageGroup, @NonNull LinearLayout locationLayout,
      @NonNull LinearLayout main, @NonNull TextView name, @NonNull TextView nothing,
      @NonNull ImageView option, @NonNull ShimmerRecyclerView post,
      @NonNull LinearProgressIndicator progressBar, @NonNull CircleImageView selectImage,
      @NonNull Toolbar toolbar, @NonNull TextView username) {
    this.rootView = rootView;
    this.QRCode = QRCode;
    this.back = back;
    this.constraintLayout = constraintLayout;
    this.cover = cover;
    this.createPost = createPost;
    this.details = details;
    this.discription = discription;
    this.history = history;
    this.imageGroup = imageGroup;
    this.locationLayout = locationLayout;
    this.main = main;
    this.name = name;
    this.nothing = nothing;
    this.option = option;
    this.post = post;
    this.progressBar = progressBar;
    this.selectImage = selectImage;
    this.toolbar = toolbar;
    this.username = username;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_groups, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.QRCode;
      ImageView QRCode = ViewBindings.findChildViewById(rootView, id);
      if (QRCode == null) {
        break missingId;
      }

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.cover;
      ImageView cover = ViewBindings.findChildViewById(rootView, id);
      if (cover == null) {
        break missingId;
      }

      id = R.id.create_post;
      LinearLayout createPost = ViewBindings.findChildViewById(rootView, id);
      if (createPost == null) {
        break missingId;
      }

      id = R.id.details;
      LinearLayout details = ViewBindings.findChildViewById(rootView, id);
      if (details == null) {
        break missingId;
      }

      id = R.id.discription;
      SocialTextView discription = ViewBindings.findChildViewById(rootView, id);
      if (discription == null) {
        break missingId;
      }

      id = R.id.history;
      TextView history = ViewBindings.findChildViewById(rootView, id);
      if (history == null) {
        break missingId;
      }

      id = R.id.imageGroup;
      CircleImageView imageGroup = ViewBindings.findChildViewById(rootView, id);
      if (imageGroup == null) {
        break missingId;
      }

      id = R.id.location_layout;
      LinearLayout locationLayout = ViewBindings.findChildViewById(rootView, id);
      if (locationLayout == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.nothing;
      TextView nothing = ViewBindings.findChildViewById(rootView, id);
      if (nothing == null) {
        break missingId;
      }

      id = R.id.option;
      ImageView option = ViewBindings.findChildViewById(rootView, id);
      if (option == null) {
        break missingId;
      }

      id = R.id.post;
      ShimmerRecyclerView post = ViewBindings.findChildViewById(rootView, id);
      if (post == null) {
        break missingId;
      }

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.selectImage;
      CircleImageView selectImage = ViewBindings.findChildViewById(rootView, id);
      if (selectImage == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ActivityGroupsBinding((ConstraintLayout) rootView, QRCode, back, constraintLayout,
          cover, createPost, details, discription, history, imageGroup, locationLayout, main, name,
          nothing, option, post, progressBar, selectImage, toolbar, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
