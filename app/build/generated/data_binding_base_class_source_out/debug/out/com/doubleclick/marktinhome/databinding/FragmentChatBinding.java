// Generated by view binder compiler. Do not edit!
package com.doubleclick.marktinhome.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.devlomi.record_view.RecordButton;
import com.devlomi.record_view.RecordView;
import com.doubleclick.marktinhome.R;
import com.google.android.material.appbar.AppBarLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChatBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView_;

  @NonNull
  public final ImageView attachFile;

  @NonNull
  public final AppBarLayout barLayout;

  @NonNull
  public final RecyclerView chatRecycler;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final LottieAnimationView contact;

  @NonNull
  public final ConstraintLayout continerAttacht;

  @NonNull
  public final ImageView emotion;

  @NonNull
  public final EditText etTextMessage;

  @NonNull
  public final LottieAnimationView file;

  @NonNull
  public final LottieAnimationView image;

  @NonNull
  public final ConstraintLayout layoutText;

  @NonNull
  public final LottieAnimationView location;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final RecordView recordView;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final ConstraintLayout rootView;

  @NonNull
  public final RecordButton sendRecord;

  @NonNull
  public final ImageView sendText;

  @NonNull
  public final TextView status;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView username;

  @NonNull
  public final LottieAnimationView video;

  private FragmentChatBinding(@NonNull ConstraintLayout rootView_, @NonNull ImageView attachFile,
      @NonNull AppBarLayout barLayout, @NonNull RecyclerView chatRecycler,
      @NonNull ConstraintLayout constraintLayout, @NonNull LottieAnimationView contact,
      @NonNull ConstraintLayout continerAttacht, @NonNull ImageView emotion,
      @NonNull EditText etTextMessage, @NonNull LottieAnimationView file,
      @NonNull LottieAnimationView image, @NonNull ConstraintLayout layoutText,
      @NonNull LottieAnimationView location, @NonNull CircleImageView profileImage,
      @NonNull RecordView recordView, @NonNull RelativeLayout relativeLayout,
      @NonNull ConstraintLayout rootView, @NonNull RecordButton sendRecord,
      @NonNull ImageView sendText, @NonNull TextView status, @NonNull Toolbar toolbar,
      @NonNull TextView username, @NonNull LottieAnimationView video) {
    this.rootView_ = rootView_;
    this.attachFile = attachFile;
    this.barLayout = barLayout;
    this.chatRecycler = chatRecycler;
    this.constraintLayout = constraintLayout;
    this.contact = contact;
    this.continerAttacht = continerAttacht;
    this.emotion = emotion;
    this.etTextMessage = etTextMessage;
    this.file = file;
    this.image = image;
    this.layoutText = layoutText;
    this.location = location;
    this.profileImage = profileImage;
    this.recordView = recordView;
    this.relativeLayout = relativeLayout;
    this.rootView = rootView;
    this.sendRecord = sendRecord;
    this.sendText = sendText;
    this.status = status;
    this.toolbar = toolbar;
    this.username = username;
    this.video = video;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView_;
  }

  @NonNull
  public static FragmentChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attach_file;
      ImageView attachFile = ViewBindings.findChildViewById(rootView, id);
      if (attachFile == null) {
        break missingId;
      }

      id = R.id.bar_layout;
      AppBarLayout barLayout = ViewBindings.findChildViewById(rootView, id);
      if (barLayout == null) {
        break missingId;
      }

      id = R.id.chatRecycler;
      RecyclerView chatRecycler = ViewBindings.findChildViewById(rootView, id);
      if (chatRecycler == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.contact;
      LottieAnimationView contact = ViewBindings.findChildViewById(rootView, id);
      if (contact == null) {
        break missingId;
      }

      id = R.id.continer_attacht;
      ConstraintLayout continerAttacht = ViewBindings.findChildViewById(rootView, id);
      if (continerAttacht == null) {
        break missingId;
      }

      id = R.id.emotion;
      ImageView emotion = ViewBindings.findChildViewById(rootView, id);
      if (emotion == null) {
        break missingId;
      }

      id = R.id.et_text_message;
      EditText etTextMessage = ViewBindings.findChildViewById(rootView, id);
      if (etTextMessage == null) {
        break missingId;
      }

      id = R.id.file;
      LottieAnimationView file = ViewBindings.findChildViewById(rootView, id);
      if (file == null) {
        break missingId;
      }

      id = R.id.image;
      LottieAnimationView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.layout_text;
      ConstraintLayout layoutText = ViewBindings.findChildViewById(rootView, id);
      if (layoutText == null) {
        break missingId;
      }

      id = R.id.location;
      LottieAnimationView location = ViewBindings.findChildViewById(rootView, id);
      if (location == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.recordView;
      RecordView recordView = ViewBindings.findChildViewById(rootView, id);
      if (recordView == null) {
        break missingId;
      }

      id = R.id.relativeLayout;
      RelativeLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      ConstraintLayout rootView_ = (ConstraintLayout) rootView;

      id = R.id.sendRecord;
      RecordButton sendRecord = ViewBindings.findChildViewById(rootView, id);
      if (sendRecord == null) {
        break missingId;
      }

      id = R.id.sendText;
      ImageView sendText = ViewBindings.findChildViewById(rootView, id);
      if (sendText == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      id = R.id.video;
      LottieAnimationView video = ViewBindings.findChildViewById(rootView, id);
      if (video == null) {
        break missingId;
      }

      return new FragmentChatBinding((ConstraintLayout) rootView, attachFile, barLayout,
          chatRecycler, constraintLayout, contact, continerAttacht, emotion, etTextMessage, file,
          image, layoutText, location, profileImage, recordView, relativeLayout, rootView_,
          sendRecord, sendText, status, toolbar, username, video);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
