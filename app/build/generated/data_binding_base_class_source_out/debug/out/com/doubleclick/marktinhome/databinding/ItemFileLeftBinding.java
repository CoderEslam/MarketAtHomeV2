// Generated by view binder compiler. Do not edit!
package com.doubleclick.marktinhome.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.doubleclick.marktinhome.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFileLeftBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView10;

  @NonNull
  public final ImageView download;

  @NonNull
  public final LottieAnimationView file;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ImageView seen;

  @NonNull
  public final TextView time;

  private ItemFileLeftBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView10,
      @NonNull ImageView download, @NonNull LottieAnimationView file,
      @NonNull ProgressBar progressBar, @NonNull ImageView seen, @NonNull TextView time) {
    this.rootView = rootView;
    this.cardView10 = cardView10;
    this.download = download;
    this.file = file;
    this.progressBar = progressBar;
    this.seen = seen;
    this.time = time;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFileLeftBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFileLeftBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_file_left, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFileLeftBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView10;
      CardView cardView10 = ViewBindings.findChildViewById(rootView, id);
      if (cardView10 == null) {
        break missingId;
      }

      id = R.id.download;
      ImageView download = ViewBindings.findChildViewById(rootView, id);
      if (download == null) {
        break missingId;
      }

      id = R.id.file;
      LottieAnimationView file = ViewBindings.findChildViewById(rootView, id);
      if (file == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.seen;
      ImageView seen = ViewBindings.findChildViewById(rootView, id);
      if (seen == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      return new ItemFileLeftBinding((ConstraintLayout) rootView, cardView10, download, file,
          progressBar, seen, time);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
