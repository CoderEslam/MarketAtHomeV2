// Generated by view binder compiler. Do not edit!
package com.doubleclick.marktinhome.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.doubleclick.marktinhome.R;
import com.todkars.shimmer.ShimmerRecyclerView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CommentsGroupLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ShimmerRecyclerView RecyclerReplay;

  @NonNull
  public final CardView cardView8;

  @NonNull
  public final TextView comment;

  @NonNull
  public final CircleImageView imageUser;

  @NonNull
  public final ImageView imgLike;

  @NonNull
  public final TextView like;

  @NonNull
  public final NestedScrollView nestedScroll;

  @NonNull
  public final TextView replay;

  @NonNull
  public final TextView time;

  @NonNull
  public final TextView userName;

  private CommentsGroupLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ShimmerRecyclerView RecyclerReplay, @NonNull CardView cardView8,
      @NonNull TextView comment, @NonNull CircleImageView imageUser, @NonNull ImageView imgLike,
      @NonNull TextView like, @NonNull NestedScrollView nestedScroll, @NonNull TextView replay,
      @NonNull TextView time, @NonNull TextView userName) {
    this.rootView = rootView;
    this.RecyclerReplay = RecyclerReplay;
    this.cardView8 = cardView8;
    this.comment = comment;
    this.imageUser = imageUser;
    this.imgLike = imgLike;
    this.like = like;
    this.nestedScroll = nestedScroll;
    this.replay = replay;
    this.time = time;
    this.userName = userName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CommentsGroupLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CommentsGroupLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.comments_group_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CommentsGroupLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RecyclerReplay;
      ShimmerRecyclerView RecyclerReplay = ViewBindings.findChildViewById(rootView, id);
      if (RecyclerReplay == null) {
        break missingId;
      }

      id = R.id.cardView8;
      CardView cardView8 = ViewBindings.findChildViewById(rootView, id);
      if (cardView8 == null) {
        break missingId;
      }

      id = R.id.comment;
      TextView comment = ViewBindings.findChildViewById(rootView, id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.imageUser;
      CircleImageView imageUser = ViewBindings.findChildViewById(rootView, id);
      if (imageUser == null) {
        break missingId;
      }

      id = R.id.img_like;
      ImageView imgLike = ViewBindings.findChildViewById(rootView, id);
      if (imgLike == null) {
        break missingId;
      }

      id = R.id.like;
      TextView like = ViewBindings.findChildViewById(rootView, id);
      if (like == null) {
        break missingId;
      }

      id = R.id.nestedScroll;
      NestedScrollView nestedScroll = ViewBindings.findChildViewById(rootView, id);
      if (nestedScroll == null) {
        break missingId;
      }

      id = R.id.replay;
      TextView replay = ViewBindings.findChildViewById(rootView, id);
      if (replay == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new CommentsGroupLayoutBinding((ConstraintLayout) rootView, RecyclerReplay, cardView8,
          comment, imageUser, imgLike, like, nestedScroll, replay, time, userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
