// Generated by view binder compiler. Do not edit!
package com.doubleclick.marktinhome.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.doubleclick.marktinhome.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemVideoLeftBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout ContinerViedo;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageView download;

  @NonNull
  public final ImageView options;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ImageView seen;

  @NonNull
  public final TextView time;

  @NonNull
  public final VideoView video;

  private ItemVideoLeftBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout ContinerViedo, @NonNull CardView cardView,
      @NonNull ImageView download, @NonNull ImageView options, @NonNull ProgressBar progressBar,
      @NonNull ImageView seen, @NonNull TextView time, @NonNull VideoView video) {
    this.rootView = rootView;
    this.ContinerViedo = ContinerViedo;
    this.cardView = cardView;
    this.download = download;
    this.options = options;
    this.progressBar = progressBar;
    this.seen = seen;
    this.time = time;
    this.video = video;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemVideoLeftBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemVideoLeftBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_video_left, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemVideoLeftBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout ContinerViedo = (ConstraintLayout) rootView;

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.download;
      ImageView download = ViewBindings.findChildViewById(rootView, id);
      if (download == null) {
        break missingId;
      }

      id = R.id.options;
      ImageView options = ViewBindings.findChildViewById(rootView, id);
      if (options == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.seen;
      ImageView seen = ViewBindings.findChildViewById(rootView, id);
      if (seen == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      id = R.id.video;
      VideoView video = ViewBindings.findChildViewById(rootView, id);
      if (video == null) {
        break missingId;
      }

      return new ItemVideoLeftBinding((ConstraintLayout) rootView, ContinerViedo, cardView,
          download, options, progressBar, seen, time, video);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
