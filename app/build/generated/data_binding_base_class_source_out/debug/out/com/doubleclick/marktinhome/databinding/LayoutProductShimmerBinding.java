// Generated by view binder compiler. Do not edit!
package com.doubleclick.marktinhome.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.doubleclick.marktinhome.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutProductShimmerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView bannerSlierViewPager;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView productName;

  @NonNull
  public final TextView productPrice;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final TextView trademark;

  private LayoutProductShimmerBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView bannerSlierViewPager, @NonNull CardView cardView,
      @NonNull TextView description, @NonNull TextView productName, @NonNull TextView productPrice,
      @NonNull RatingBar ratingBar, @NonNull TextView trademark) {
    this.rootView = rootView;
    this.bannerSlierViewPager = bannerSlierViewPager;
    this.cardView = cardView;
    this.description = description;
    this.productName = productName;
    this.productPrice = productPrice;
    this.ratingBar = ratingBar;
    this.trademark = trademark;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutProductShimmerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutProductShimmerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_product_shimmer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutProductShimmerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.banner_slier_view_pager;
      ImageView bannerSlierViewPager = ViewBindings.findChildViewById(rootView, id);
      if (bannerSlierViewPager == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.productName;
      TextView productName = ViewBindings.findChildViewById(rootView, id);
      if (productName == null) {
        break missingId;
      }

      id = R.id.productPrice;
      TextView productPrice = ViewBindings.findChildViewById(rootView, id);
      if (productPrice == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.trademark;
      TextView trademark = ViewBindings.findChildViewById(rootView, id);
      if (trademark == null) {
        break missingId;
      }

      return new LayoutProductShimmerBinding((ConstraintLayout) rootView, bannerSlierViewPager,
          cardView, description, productName, productPrice, ratingBar, trademark);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
