// Generated by view binder compiler. Do not edit!
package com.doubleclick.marktinhome.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.doubleclick.marktinhome.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRichBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout flAction;

  @NonNull
  public final ConstraintLayout flContainer;

  @NonNull
  public final HorizontalScrollView hsvActionBar;

  @NonNull
  public final ImageView ivAction;

  @NonNull
  public final ImageView ivActionInsertImage;

  @NonNull
  public final ImageView ivActionInsertLink;

  @NonNull
  public final ImageView ivActionLineHeight;

  @NonNull
  public final ImageView ivActionRedo;

  @NonNull
  public final ImageView ivActionTable;

  @NonNull
  public final ImageView ivActionTxtBgColor;

  @NonNull
  public final ImageView ivActionTxtColor;

  @NonNull
  public final ImageView ivActionUndo;

  @NonNull
  public final ImageView ivGetHtml;

  @NonNull
  public final LinearLayout llActionBarContainer;

  @NonNull
  public final WebView wvContainer;

  private FragmentRichBinding(@NonNull ConstraintLayout rootView, @NonNull FrameLayout flAction,
      @NonNull ConstraintLayout flContainer, @NonNull HorizontalScrollView hsvActionBar,
      @NonNull ImageView ivAction, @NonNull ImageView ivActionInsertImage,
      @NonNull ImageView ivActionInsertLink, @NonNull ImageView ivActionLineHeight,
      @NonNull ImageView ivActionRedo, @NonNull ImageView ivActionTable,
      @NonNull ImageView ivActionTxtBgColor, @NonNull ImageView ivActionTxtColor,
      @NonNull ImageView ivActionUndo, @NonNull ImageView ivGetHtml,
      @NonNull LinearLayout llActionBarContainer, @NonNull WebView wvContainer) {
    this.rootView = rootView;
    this.flAction = flAction;
    this.flContainer = flContainer;
    this.hsvActionBar = hsvActionBar;
    this.ivAction = ivAction;
    this.ivActionInsertImage = ivActionInsertImage;
    this.ivActionInsertLink = ivActionInsertLink;
    this.ivActionLineHeight = ivActionLineHeight;
    this.ivActionRedo = ivActionRedo;
    this.ivActionTable = ivActionTable;
    this.ivActionTxtBgColor = ivActionTxtBgColor;
    this.ivActionTxtColor = ivActionTxtColor;
    this.ivActionUndo = ivActionUndo;
    this.ivGetHtml = ivGetHtml;
    this.llActionBarContainer = llActionBarContainer;
    this.wvContainer = wvContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRichBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRichBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_rich, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRichBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fl_action;
      FrameLayout flAction = ViewBindings.findChildViewById(rootView, id);
      if (flAction == null) {
        break missingId;
      }

      ConstraintLayout flContainer = (ConstraintLayout) rootView;

      id = R.id.hsv_action_bar;
      HorizontalScrollView hsvActionBar = ViewBindings.findChildViewById(rootView, id);
      if (hsvActionBar == null) {
        break missingId;
      }

      id = R.id.iv_action;
      ImageView ivAction = ViewBindings.findChildViewById(rootView, id);
      if (ivAction == null) {
        break missingId;
      }

      id = R.id.iv_action_insert_image;
      ImageView ivActionInsertImage = ViewBindings.findChildViewById(rootView, id);
      if (ivActionInsertImage == null) {
        break missingId;
      }

      id = R.id.iv_action_insert_link;
      ImageView ivActionInsertLink = ViewBindings.findChildViewById(rootView, id);
      if (ivActionInsertLink == null) {
        break missingId;
      }

      id = R.id.iv_action_line_height;
      ImageView ivActionLineHeight = ViewBindings.findChildViewById(rootView, id);
      if (ivActionLineHeight == null) {
        break missingId;
      }

      id = R.id.iv_action_redo;
      ImageView ivActionRedo = ViewBindings.findChildViewById(rootView, id);
      if (ivActionRedo == null) {
        break missingId;
      }

      id = R.id.iv_action_table;
      ImageView ivActionTable = ViewBindings.findChildViewById(rootView, id);
      if (ivActionTable == null) {
        break missingId;
      }

      id = R.id.iv_action_txt_bg_color;
      ImageView ivActionTxtBgColor = ViewBindings.findChildViewById(rootView, id);
      if (ivActionTxtBgColor == null) {
        break missingId;
      }

      id = R.id.iv_action_txt_color;
      ImageView ivActionTxtColor = ViewBindings.findChildViewById(rootView, id);
      if (ivActionTxtColor == null) {
        break missingId;
      }

      id = R.id.iv_action_undo;
      ImageView ivActionUndo = ViewBindings.findChildViewById(rootView, id);
      if (ivActionUndo == null) {
        break missingId;
      }

      id = R.id.iv_get_html;
      ImageView ivGetHtml = ViewBindings.findChildViewById(rootView, id);
      if (ivGetHtml == null) {
        break missingId;
      }

      id = R.id.ll_action_bar_container;
      LinearLayout llActionBarContainer = ViewBindings.findChildViewById(rootView, id);
      if (llActionBarContainer == null) {
        break missingId;
      }

      id = R.id.wv_container;
      WebView wvContainer = ViewBindings.findChildViewById(rootView, id);
      if (wvContainer == null) {
        break missingId;
      }

      return new FragmentRichBinding((ConstraintLayout) rootView, flAction, flContainer,
          hsvActionBar, ivAction, ivActionInsertImage, ivActionInsertLink, ivActionLineHeight,
          ivActionRedo, ivActionTable, ivActionTxtBgColor, ivActionTxtColor, ivActionUndo,
          ivGetHtml, llActionBarContainer, wvContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
