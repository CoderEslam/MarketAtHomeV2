// Generated by view binder compiler. Do not edit!
package com.doubleclick.marktinhome.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.doubleclick.marktinhome.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityParentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final MaterialCardView fab;

  @NonNull
  public final SearchView search;

  @NonNull
  public final TabLayout tabLayoutParent;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final CollapsingToolbarLayout toolbarCollapsinglayout;

  @NonNull
  public final ViewPager viewPager;

  @NonNull
  public final ViewPager viewPagerParent;

  private ActivityParentBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull MaterialCardView fab, @NonNull SearchView search, @NonNull TabLayout tabLayoutParent,
      @NonNull Toolbar toolbar, @NonNull CollapsingToolbarLayout toolbarCollapsinglayout,
      @NonNull ViewPager viewPager, @NonNull ViewPager viewPagerParent) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.fab = fab;
    this.search = search;
    this.tabLayoutParent = tabLayoutParent;
    this.toolbar = toolbar;
    this.toolbarCollapsinglayout = toolbarCollapsinglayout;
    this.viewPager = viewPager;
    this.viewPagerParent = viewPagerParent;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityParentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityParentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_parent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityParentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.fab;
      MaterialCardView fab = ViewBindings.findChildViewById(rootView, id);
      if (fab == null) {
        break missingId;
      }

      id = R.id.search;
      SearchView search = ViewBindings.findChildViewById(rootView, id);
      if (search == null) {
        break missingId;
      }

      id = R.id.tab_layout_parent;
      TabLayout tabLayoutParent = ViewBindings.findChildViewById(rootView, id);
      if (tabLayoutParent == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_Collapsinglayout;
      CollapsingToolbarLayout toolbarCollapsinglayout = ViewBindings.findChildViewById(rootView, id);
      if (toolbarCollapsinglayout == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      id = R.id.view_pager_Parent;
      ViewPager viewPagerParent = ViewBindings.findChildViewById(rootView, id);
      if (viewPagerParent == null) {
        break missingId;
      }

      return new ActivityParentBinding((CoordinatorLayout) rootView, appBar, fab, search,
          tabLayoutParent, toolbar, toolbarCollapsinglayout, viewPager, viewPagerParent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
